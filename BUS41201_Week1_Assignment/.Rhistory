x <- benjer[,c("flavor_descr","size1_descr",
"household_income","household_size")]
## relevel 'flavor' to have baseline of vanilla
x$flavor_descr <- relevel(x$flavor_descr,"VAN")
## coupon usage
x$usecoup = factor(benjer$coupon_value>0)
x$couponper1 <- benjer$coupon_value/benjer$quantity
## organize some demographics
x$region <- factor(benjer$region,
levels=1:4, labels=c("East","Central","South","West"))
x$married <- factor(benjer$marital_status==1)
x$race <- factor(benjer$race,
levels=1:4,labels=c("white","black","asian","other"))
x$hispanic_origin <- benjer$hispanic_origin==1
x$microwave <- benjer$kitchen_appliances %in% c(1,4,5,7)
x$dishwasher <- benjer$kitchen_appliances %in% c(2,4,6,7)
x$sfh <- benjer$type_of_residence==1
x$internet <- benjer$household_internet_connection==1
x$tvcable <- benjer$tv_items>1
## fit the regression
fit <- glm(y~., data=x)
## grab the non-intercept p-values from a glm
## -1 to drop the intercept, 4 is 4th column
pvals <- summary(fit)$coef[-1,4]
## source the fdr_cut function
source("fdr.R")
par(mfrow=c(1,1))
par(mar=c(5,10,5,5))
barplot(table(benjer$flavor),border=NA, las=2)
class(benjer$promotion_type) #gotta make it a factor
hist(y); hist(priceper1);  #the non-logged is more normal
hist(benjer$promotion_type) #Mostly store features
#benjer$promotion_type[is.na(benjer$promotion_type)]=0 #Cant have blanks, making it 5 is going to bite you in the ass, should be 0
#benjer$promotion_type=factor(benjer$promotion_type)
boxplot(y[benjer$promotion_type>0] ~ benjer$promotion_type, col= levels(factor(benjer$promotion))) #gotta add levels to the boxplot
#Not super helpful; lots of data outside >1sd and no clear differences
plot(priceper1[benjer$promotion_type>0] ~ benjer$quantity[benjer$promotion_type>0], col=factor(benjer$promotion_type), pch=20)
legend("topright", fill=levels(factor(benjer$promotion_type)), legend=c("Store Feature","Store Coupon", "Manufacturer Coupon", "Other Deal"))
#green clustered to top and price volatility reduces with quantity; marginally helpful graph
class(benjer$region)
boxplot(y ~ benjer$region, col=levels(factor(benjer$region))) #useless
plot(y ~ quantity, data=benjer, col=factor(benjer$region), pch=20) #useless
regionpromo=glm(promotion_type ~ region, data=benjer)
#salestable <- tapply(exp(oj$logmove), oj[,c("feat","brand")], sum)
mtable <- tapply(y[benjer$promotion_type>0], benjer[,c("promotion_type","region")], sum)
#rownames(table)= c("Store Feature","Store Coupon", "Manufacturer Coupon", "Other Deal")
colnames(mtable)= c("East","Central","South","West")
mosaicplot(mtable, col=levels(factor(benjer$region)), main="(price?) by promotion and region")
#not sure this is right, is the y above irrelavent? Professor suggested plotting only 2 categorical variables.
## West advertises the most, East has more manufacture coupons (is B&J from the East)
### Analyze the given model ###
summary(fit)
print("The model sumamrizes log price versus a number of regressors, specifically"); names(x)
fit2 <- glm(y~. - flavor_descr, data=x)
summary(fit2)
print("ignoring flavor we find that all the regressors save asisan, hispanic and dishwasher were significant, let's remove these")
fit3 <- glm(y~. -flavor_descr -race -dishwasher - hispanic_origin, data=x)
summary(fit3)
n=nrow(x)
BIC <- c(reg1=extractAIC(fit, k=log(n))[2],
reg2=extractAIC(fit2, k=log(n))[2],
reg3=extractAIC(fit3, k=log(n))[2])
# Model probabilities
eBIC <- exp(-0.5*(BIC-min(BIC)))
probs <- eBIC/sum(eBIC)
round(probs, 5)
print("The simplified model is better according to BIC. Could use out-of-sample to test, but this should work for now")
### Mo Notes
#discrete quantitites make it hard to see relations
#would like to see sale vs region in mosaic
dim(benjer)
summary(fit3)
plot(y ~ benjer$size1) #KEEP
boxplot(y ~ benjer$region) #no beuno
boxplot(y ~ benjer$household_income) #beuno
plot(benjer$coupon[])
#FDR stuff
cutoff <- fdr_cut(pvals, 0.01)
plot(y ~ benjer$size1) #KEEP
boxplot(y ~ benjer$household_income) #beuno
plot(benjer$coupon[])
plot(y ~ benjer$size1) #KEEP
boxplot(y ~ benjer$household_income) #beuno
plot(y ~benjer$favlor)
x$flavor_descr <- relevel(x$flavor_descr,"VAN")
x$flavor_descr
names(benjer)
x$formula
names(benjer)
x$formula_descr
x$formula_descr <- factor(benjer$formula_desc, levels=1:2, labels=c("light","normal"))
x$formula <- factor(benjer$formula_desc, levels=1:2, labels=c("light","normal"))
x$formual
x$formula
benjer$formula_desc
benjer$formula_desc[1:2,]
benjer$formula_desc[1:2]
benjer$formula_desc[1:2]
benjer$formula_desc[1:10]
x$formula <- factor(benjer$formula_desc, levels=1:2, labels=c("light","half the fat","regular"))
x$formula <- factor(benjer$formula_desc, levels=1:3, labels=c("light","half the fat","regular"))
x$formula
benjer$formula_desc[1:10]
x$formula <- factor(benjer$formula_desc, levels=1:3, labels=c("LIGHT","HALF THE FAT","REGULAR"))
x$formula
x$region <- factor(benjer$region,
levels=1:4, labels=c("East","Central","South","West"))
x$region
benjer$region[1:10]
benjer$formula_desc[1:10]
x$formula <- factor(benjer$formula_desc, levels=1:3, labels=c("LIGHT","HALF THE FAT","REGULAR"))
x$formula
x$formula[1:10]
x$formula <- factor(benjer$formula_desc, labels=c("LIGHT","HALF THE FAT","REGULAR"))
benjer = read.csv("BenAndJerry.csv")
benjer$formula_desc[1:10]
benjer$region[1:10]
boxplot(y ~ benjer$region, col=levels(factor(benjer$region))) #useless
class(benjer$region)
benjer$promotion_type
class(benjer$promotion_type) #gotta make it a factor
benjer$promotion_type=factor(benjer$promotion_type)
boxplot(y[benjer$promotion_type>0] ~ benjer$promotion_type, col= levels(factor(benjer$promotion))) #gotta add levels to the boxplot
plot(y ~ benjer$size1) #KEEP
plot(y~ benjer$formula_desc)
plot(y ~ benjer$formula_desc)
plot(y ~ benjer$size1) #KEEP
plot(y ~benjer$favlor)
plot(y ~benjer$favlor)
plot(y ~benjer$flavor)
plot(y ~ benjer$formula_desc)
plot(y ~ benjer$formula_desc)
plot(benjer$household_income ~ benjer$formula_desc)
benjer$formula_desc[1:10]
benjer$formula_desc[1:30]
plot(benjer$household_income ~ benjer$formula_desc)
plot(benjer$household_income ~ benjer$flavor)
plot(benjer$household_income ~ benjer$size)
plot(benjer$size ~ benjer$flavor)
benjer$flavor[1:10]
count(benjer$flavor, "CAKE BATTER")
ucounts = benjer$flavor.apply(lambda c: len(c.unique()))
ucounts <- benjer$flavor.apply(lambda c: len(c.unique()))
ucounts <- benjer$flavor.apply(function(x): length(x.unique()))
unique(benjer$flavor)
ninque(benjer$flavor)
length(unique(benjer$flavor))
count_unique_words <-function(wlist) {
ucountlist = list()
unamelist = c()
for (i in wlist)
{
if (is.element(i, unamelist))
ucountlist[[i]] <- ucountlist[[i]] +1
else
{
listlen <- length(ucountlist)
ucountlist[[i]] <- 1
unamelist <- c(unamelist, i)
}
}
ucountlist
}
expt_counts <- count_unique_words(population)
for(i in names(expt_counts))
cat(i, expt_counts[[i]], "\n")
expt_counts <- count_unique_words(population)
count_unique_words <-function(wlist) {
ucountlist = list()
unamelist = c()
for (i in wlist)
{
if (is.element(i, unamelist))
ucountlist[[i]] <- ucountlist[[i]] +1
else
{
listlen <- length(ucountlist)
ucountlist[[i]] <- 1
unamelist <- c(unamelist, i)
}
}
ucountlist
}
expt_counts <- count_unique_words(benjer$flavor)
for(i in names(expt_counts))
cat(i, expt_counts[[i]], "\n")
d <- lapply(benjer$flavor, table)
d
d
d <- lapply(benjer[,c("falvor")], table)
d <- lapply(benjer[,c("falvor")], table)
d <- lapply(benjer$flavor, 1, table)
d <- apply(benjer$flavor, 1, table)
d <- apply(benjer$flavor, 1, table)
d <- spply(benjer$flavor, 1, table)
d <- sapply(benjer$flavor, 1, table)
d <- sapply(benjer$flavor, table)
d
d <- apply(benjer$flavor, table)
d <- tapply(benjer$flavor, table)
d <- apply(benjer$flavor, c(1,50) table)
d <- apply(benjer$flavor, c(1,50), table)
d <- apply(benjer$flavor, c(50,1), table)
d
d <- tapply(benjer$flavor, table, FUN=length)
d <- tapply(benjer$flavor, FUN=length)
d <- tapply(benjer$flavor,1, FUN=length)
d
d <- tapply(benjer$flavor, FUN=length)
d
aggregate(benjer$flavor, function(x) length(unique(x)))
aggregate(benjer$flavor, function(x) length(unique(x)))
d <- tapply(benjer$flavor, 2,FUN=length)
d <- tapply(benjer$flavor, 2, table)
d <- tapply(benjer$flavor, table)
d <- apply(benjer$flavor, table)
d <- apply(benjer$flavor, table)
d <- apply(benjer$flavor, table)
d <- apply(benjer$flavor,0, table)
d <- apply(benjer$flavor,1, table)
d <- apply(benjer$flavor,2, table)
d <- apply(benjer$flavor, 3, table)
d <- apply(benjer$flavor, 2, table)
d <- apply(benjer$flavor, 1, table)
d <- lapply(benjer$flavor, table)
d
d <- ddply(benjer$flavor, 1, table)
aggregate(benjer$flavor, function(x) length(unique(x)))
aggregate(benjer$flavor,1,function(x) length(unique(x)))
aggregate(len ~ ., data = benjer$flavor, sum)
aggregate(length ~ ., data = benjer$flavor, sum)
aggregate(length(benjer$flavor) ~ ., data = benjer$flavor, sum)
aggregate(length(benjer$flavor) ~ , data = benjer$flavor, sum)
aggregate(data = benjer$flavor, sum)
aggregate(benjer$flavor, nfrequency = 1, FUN = sum)
barplot(table(benjer$flavor))
barplot(table(benjer$flavor))
c <- table(benjer$flavor)
c
sort(c)
d <- sort(c)
d
d <- sort1(c)
d <- sort(c, decreasing= TRUE)
d
d <- d[1:10]
d
top_10_flavors
top_10_flavors <- flavors_sorted[1:10]
c <- table(benjer$flavor)
flavors_sorted <- sort(c, decreasing= TRUE)
top_10_flavors <- flavors_sorted[1:10]
top_10_flavors
top_10_flavors(1)
top_10_flavors <- flavors_sorted[1:10] #top 10 flavors
top_10_flavors(1)
top_10_flavors[1]
top_10_flavors(1:,)
top_10_flavors(1:)
top_10_flavors(1:2)
hist(top_10_flavors)
hist(y~top_10_flavors)
hist(top_10_flavors~y)
plot(benjer$household_income ~ benjer$formula_desc)
plot(y ~ benjer$size1) #KEEP
plot(y ~benjer$flavor)
boxplot(y ~ benjer$region) #no beuno
boxplot(y ~ benjer$household_income) #beuno
boxplot(top_10_flavors~y)
top_10_flavors[1,]
top_10_flavors[1]
top_10_flavors[1[1]]
top_10_flavors[1[0]]
top_10_flavors[1[2]]
top_10_flavors[1[1]]
c <- table(benjer$flavor, sum) #aggregates non-numeric data into a table with count
c <- table(benjer$flavor) #aggregates non-numeric data into a table with count
flavors_sorted <- sort(c, decreasing= TRUE) #sort the table in descending order
top_10_flavors <- flavors_sorted[1:10] #top 10 flavors
hist(top_10_flavors)
plot(top_10_flavors)
c <- table(benjer$flavor, benjer$price) #aggregates non-numeric data into a table with count
names(benjer)
c <- table(benjer$flavor, benjer$total_spent) #aggregates non-numeric data into a table with count
c
c[1]
c[1:10]
c <- table(benjer$flavor) #aggregates non-numeric data into a table with count
c
c[1]
c[1[0]]
c[1[1]]
c[1(1)]
summary(benjer$flavor)
d<-summary(benjer$flavor)
d[1[1]]
d[1[0]]
names(benjer)
c <- table(benjer$flavor,x$region) #aggregates non-numeric data into a table with count
c[1(1)]
c[1:10]
c[1]
c <- table(benjer$flavor,benjer$region) #aggregates non-numeric data into a table with count
c[1]
x$region <- factor(benjer$region,
levels=1:4, labels=c("East","Central","South","West"))
benjer$region[1:10]
x$region[1:10]
c <- table(benjer$flavor,x$region) #aggregates non-numeric data into a table with count
c[1]
c
hist(c)
graph(c)
plot(c)
c <- table(x$region, benjer$flavor) #aggregates non-numeric data into a table with count
plot(c)
c[1[1]]
addmargins(c(tab))
c <- table(x$region, benjer$flavor) #aggregates non-numeric data into a table with count
addmargins(c(tab))
addmargins(prop.table(c))
margin_table <- addmargins(c)
prop.table(margin_table)
a <- prop.table(margin_table)
a
c <- table( benjer$flavor, x$region) #aggregates non-numeric data into a table with count
addmargins(prop.table(c))
margin_table <- addmargins(c)
a <- prop.table(margin_table)
a
c <- table( benjer$flavor, x$region) #aggregates non-numeric data into a table with count
addmargins(prop.table(c))
margin_table <- addmargins(c)
a <- prop.table(margin_table)
a
a[1]
a[1:10
a[1:10]
a[1:10]
a
a
a <- a(order(Sum))
a <- order(a(Sum))
a <- order(a
a <- order(a)
a
a <- order(a)
a
a <- prop.table(margin_table)
a <- a[order(Sum)]
a <- a[order(rank(Sum))]
a
a <- a[order(rank("Sum"))]
a
a <- prop.table(margin_table)
a
a <- a[order("Sum")]
a
a <- prop.table(margin_table)
a
b <- a[order("Sum")]
b
a
a[1:10]
a[1,]
arrange(a,desc(Sum))
arrange(a,desc(Sum))
library(plyr)
arrange(a,desc(Sum))
a[order(a[,"Sum"])]
a[1,]
a[50,]
a[40:50,]
a <- a[order(a[,"Sum"])]
a[1,]
a
a[1,]
a[1]
a <- a[order(a[,"Sum"]),]
a <- prop.table(margin_table)
a
a <- order(a$Sum)
a <- a[order.Sum]
a <- a[order.Sum,]
a <- a.Sum[order.pop,]
a <- a[order(a$Sum)]
a <- a[order(a$Sum),]
a <- a[order(a$Sum),]
a <- a[order("Sum"),]
a
a[1,]
a[1,]
a <- a[order(a["Sum"]),
a <- a[order(a["Sum"])]
a[1,]
a <- prop.table(margin_table)
a
a <- a[order(a["Sum"])]
a[1,]
a[1]
a <- a[order(a["Sum",])]
a <- prop.table(margin_table)
a
a <- a[order(a["Sum",])]
a[1]
a <- prop.table(margin_table)
a["Sum"]
a["Sum",]
a <- prop.table(margin_table)
a["Sum",]
a[,"Sum"]
a("Sum")
a["Sum"]
a["Sum",]
a[,"Sum",]
a[,"Sum"]
a[,"East"]
a[,"Sum"]
a <- a[order(a[,"Sum"])]
a[1]
a <- prop.table(margin_table)
a <- a[order(a[,"Sum"])]
a[1]
a <- a[order(a, "Sum")]
margin_table <- addmargins(c)
a <- prop.table(margin_table)
a <- a[order(a[,"Sum"]),]
a[1]
a[1,]
a[2,]
a[1:10,]
a <- prop.table(margin_table)
margin_table <- addmargins(c)
a <- prop.table(margin_table)
a[,"Sum"]
a
d <- a[order(a[,"Sum"]),]
d[1:10,]
top_10_icecream_by_region <- d[1:10,]
plot(top_10_icecream_by_region)
hist(top_10_icecream_by_region)
boxplot(top_10_icecream_by_region)
plot(benjer$coupon[])
boxplot(y ~ benjer$region) #no beuno
boxplot(y ~ benjer$household_income) #beuno
plot(y ~benjer$flavor)
plot(y ~ benjer$size1) #KEEP
boxplot(top_10_icecream_by_region)
top_10_icecream_by_region[1]
top_10_icecream_by_region[1,]
top_10_icecream_by_region[1:4,]
top_10_icecream_by_region[1:3,]
top_10_icecream_by_region[,1:3]
top_10_icecream_by_region[,1:4]
top_10_icecream_by_region <- d[1:10,1:4]
top_10_icecream_by_region
boxplot(top_10_icecream_by_region)
top_10_icecream_by_region(row.names)
top_10_icecream_by_region(names)
top_10_icecream_by_region(rows)
top_10_icecream_by_region(row)
top_10_icecream_by_region
top_10_icecream_by_region.row
top_10_icecream_by_region.nrow
top_10_icecream_by_region(nrow)
l <- row.names(top_10_icecream_by_region)
l
boxplot(top_10_icecream_by_region, labels=row.names(top_10_icecream_by_region))
boxplot(top_10_icecream_by_region, labels=row.names(top_10_icecream_by_region))
boxplot(top_10_icecream_by_region, x=row.names(top_10_icecream_by_region))
boxplot(top_10_icecream_by_region, labels=row.names(top_10_icecream_by_region))
top_10_icecream_by_region <- d[1:10,1:4]
top_10_icecream_by_region
boxplot(top_10_icecream_by_region, labels=row.names(top_10_icecream_by_region))
l <- row.names(top_10_icecream_by_region)
l
plot(top_10_icecream_by_region, ylab=row.names(top_10_icecream_by_region))
boxplot(top_10_icecream_by_region, ylab=row.names(top_10_icecream_by_region))
boxplot(top_10_icecream_by_region) #ylab=row.names(top_10_icecream_by_region))
top_10_icecream_by_region
c <- table( benjer$flavor, x$region) #aggregates non-numeric data into a table with count
addmargins(prop.table(c))
margin_table <- addmargins(c)
a <- prop.table(margin_table)
a
a[,"Sum"]
barplot(table(benjer$flavor))
plot(benjer$household_income ~ benjer$formula_desc) #people with more income try to get lighter flavors--"healthier"
plot(benjer$size ~ benjer$flavor)
benjer$flavor[1:10]
count(benjer$flavor, "CAKE BATTER")
unique(benjer$flavor)
barplot(table(benjer$flavor))
c <- table( benjer$flavor, x$region) #aggregates non-numeric data into a table with count
addmargins(prop.table(c))
margin_table <- addmargins(c)
a <- prop.table(margin_table)
a
a[,"Sum"]
c <- table( benjer$flavor, x$region) #aggregates non-numeric data into a table with count
addmargins(prop.table(c))
margin_table <- addmargins(c)
a <- prop.table(margin_table)
a
a[,"Sum"]
d <- a[order(a[,"Sum"]),]
top_10_icecream_by_region <- d[1:10,1:4]
top_10_icecream_by_region
boxplot(top_10_icecream_by_region) #ylab=row.names(top_10_icecream_by_region))
plot(benjer$household_income ~ benjer$formula_desc) #people with more income try to get lighter flavors--"healthier"
plot(benjer$size ~ benjer$flavor)
barplot(table(benjer$flavor))
